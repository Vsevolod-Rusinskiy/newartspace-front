import axiosInstance from '@/src/shared/config/axios/axiosInstatnce'
import { getAuthDataFromLS } from '@/src/shared/lib/common'

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
export const getCartFromServer = async () => {
  console.log('üîµ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É —Å —Å–µ—Ä–≤–µ—Ä–∞...')

  const authData = getAuthDataFromLS('auth')
  const userId = authData?.userId

  if (!userId) {
    console.error('üî¥ –û—à–∏–±–∫–∞: userId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage')
    throw new Error('UserId not found')
  }

  try {
    const response = await axiosInstance.get(`/user-paintings/${userId}`)
    console.log('‚úÖ –ü–æ–ª—É—á–∏–ª–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–≤–µ—Ç:', response.data)

    if (!response.data || !Array.isArray(response.data.cart)) {
      console.error('üî¥ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞')
      throw new Error('Invalid server response format')
    }

    return response.data
  } catch (error) {
    console.error('üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã:', error)
    throw error
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
export const updateCartOnServer = async (
  cartIds: number[],
  currentFavorites: number[]
) => {
  console.log('üîµ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∫–æ—Ä–∑–∏–Ω—É:', cartIds)
  console.log('üîµ –¢–µ–∫—É—â–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ:', currentFavorites)

  const authData = getAuthDataFromLS('auth')
  const userId = authData?.userId

  if (!userId) {
    console.error('üî¥ –û—à–∏–±–∫–∞: userId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage')
    throw new Error('UserId not found')
  }

  try {
    const response = await axiosInstance.put(`/user-paintings/${userId}`, {
      favorites: currentFavorites,
      cart: cartIds,
    })

    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã:', response.data)
    return response.data
  } catch (error) {
    console.error('üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã:', error)
    throw error
  }
}
